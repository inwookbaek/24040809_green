plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'		
}

group = 'com.lec'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'	
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	
	// DTO와 Entity간의 변환처리를 간단히 처리하기 위한 라이브러리
	implementation 'org.modelmapper:modelmapper:3.2.1'
	
	// thymeleaf-layout
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.3.0'
	
	// querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
   	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'		
   	
 	// swagger 최신버전
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	
	// 이미지.thumbnail
	implementation 'net.coobird:thumbnailator:0.4.20'
	

	
  	
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDir querydslDir
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}
